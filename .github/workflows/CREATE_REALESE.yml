name: Create release

on:
  push:
    paths-ignore:
      - 'setup.py'
    branches:
      - prod
      - generate-release

jobs:
  process_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Get current version
        run: |
          old_v=$(grep -oP "version='(\d+\.\d+)'" setup.py | cut -d"'" -f2)
          echo "Current version: $old_v"
          echo "old_v=$old_v" >> $GITHUB_ENV

      - name: Bump version number
        run: |
          new_v=$(python -c "print(str(int('$old_v'.split('.')[0]) + 1) + '.0')")

          echo "new_v=$new_v" >> $GITHUB_ENV
        
      - name: Update setup.py
        run: |
          sed -i "s/version='$old_v'/version='$new_v'/" setup.py
          
      # - name: Create realese
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.BIPy_TOKEN }}
      #   run: |
      #       gh release create v$new_v -t "Release v$new_v"
            
      # - name: Commit and push
      #   env: 
      #     CI_COMMIT_USER: ${{ github.actor }}
      #   run: |
      #     git config --global user.name "${{ env.CI_COMMIT_USER }}"
      #     git config --global user.email "${{ env.CI_COMMIT_USER }}@users.noreply.github.com"
      #     git commit -a -m "Bump version from $old_v to $new_v"
      #     git push origin ${{ github.ref_name }}
     
    outputs:
      new_v: ${{ env.new_v }}     
      old_v: ${{ env.old_v }} 

  linux_build:
    runs-on: ubuntu-latest
    needs: process_release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          
      - name: Build BIPy Linux
        run: |
          pyinstaller --noconfirm --onedir --windowed --icon "./src/GUI/assets/icone.ico" --name "BIPy" --add-data "./src:src/"  "./src/main.py"
          cd dist
          zip -r BIPy-linux.zip BIPy
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: BIPy-linux
          path: dist/BIPy-linux.zip          

      # - name: Upload BIPy.zip
      #   env:
      #       GITHUB_TOKEN: ${{ secrets.BIPy_TOKEN }}
      #   run: |
      #       gh release upload v$new_v BIPy-linux.zip --clobber
      #       gh release upload v$new_v BIPy-windows.zip --clobber
  
  publish_release:
    runs-on: ubuntu-latest
    needs: [process_release, linux_build]
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Retrieve artifacts
        uses: actions/download-artifact@v2
        with:
          name: BIPy-linux
          path: dist/BIPy-linux.zip

      - name: Publish release
        run: |
          ls
          