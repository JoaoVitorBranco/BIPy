# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'table.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets, QtGui

comandos = ["HLT ", "STO ", "LD ", "LDI ", "ADD ", "ADDI ", "SUB ", "SUBI ", "NOP ", "JUMP ", "CMP ","JL ","JG "]

class Ui_Form(object):
    def setupUi(self, Form, title):
        Form.setObjectName("Form")
        Form.resize(600, 600)
        Form.setMaximumSize(QtCore.QSize(1030, 100000))
        Form.setMinimumSize(QtCore.QSize(1030, 200))
        self.gridLayout = QtWidgets.QGridLayout(Form)
        self.gridLayout.setObjectName("gridLayout")
        self.tableWidget = QtWidgets.QTableWidget(Form)
        self.tableWidget.setMinimumSize(QtCore.QSize(1030, 1030))
        self.tableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.tableWidget.setObjectName("tableWidget")

        self.tableWidget.setDragDropMode(QtWidgets.QAbstractItemView.DragDrop)
        self.tableWidget.setDefaultDropAction(QtCore.Qt.MoveAction)

        
        self.tableWidget.setRowCount(256)
        self.tableWidget.setColumnCount(16)
        self.diminui_colunas(16)
        self.formata_colunas(16)
        self.formata_linhas(256)
        self.preenche_tabela(256, 16)
        

        font = QtGui.QFont()
        font.setCapitalization(QtGui.QFont.AllUppercase)
        self.tableWidget.setFont(font)

        for i in range(16):
            delegate = StyledItemDelegate(self.tableWidget)
            self.tableWidget.setItemDelegateForColumn(i, delegate)




        self.gridLayout.addWidget(self.tableWidget, 0, 0, 1, 1)
        self.retranslateUi(Form, title)
        QtCore.QMetaObject.connectSlotsByName(Form)

        

    def retranslateUi(self, Form, title):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", title))


    def diminui_colunas(self, num_colunas):
        for i in range(num_colunas):
            self.tableWidget.setColumnWidth(i, 60)
    
    def formata_colunas(self, num_colunas):
        _translate = QtCore.QCoreApplication.translate
        for i in range(num_colunas):
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setHorizontalHeaderItem(i, item)
            item.setText(_translate("Form", hex(i)[-1].upper()))

    def formata_linhas(self,num_linhas):
        _translate = QtCore.QCoreApplication.translate
        for i in range(num_linhas):
            item = QtWidgets.QTableWidgetItem()
            self.tableWidget.setVerticalHeaderItem(i, item)
            label = '0x'+ hex(i).split('x')[1].upper().zfill(2) + 'X'
            item.setText(_translate("Form", label))   
 
    def preenche_tabela(self, num_linhas, num_colunas):
        for i in range(num_linhas):
            for j in range(num_colunas):
                item = QtWidgets.QTableWidgetItem()
                item.setText("HLT 000")
                item.setTextAlignment(QtCore.Qt.AlignCenter)
                self.tableWidget.setItem(i, j, item)

class StyledItemDelegate(QtWidgets.QStyledItemDelegate):
    def createEditor(self, parent, option, index):
        editor = super().createEditor(parent, option, index)
        if isinstance(editor, QtWidgets.QLineEdit):
            regex = f"^({'|'.join(comandos).replace(' ','')}) [0-9A-Fa-f]{'{3}'}$"
            regex = r"{}".format(regex)
            validator = QtGui.QRegExpValidator(
                QtCore.QRegExp(regex,cs=QtCore.Qt.CaseInsensitive), editor,
            )
            editor.setValidator(validator)           
        
    
        completer = QtWidgets.QCompleter(comandos, editor)
        completer.setCaseSensitivity(QtCore.Qt.CaseInsensitive)
        editor.setCompleter(completer)
        

        return editor


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form, 'table')
    Form.show()
    sys.exit(app.exec_())
